<!doctype html>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>搭讪</title>
		<!--  <link type="text/css" rel="stylesheet" href="css/im.css"/> -->
		<script src="js/jquery-1.10.2.min.js" type="text/javascript"></script>
		<script src="js/lib/build/build.js" type="text/javascript"></script>
		<script type="text/javascript">require('boot');</script> 
		
		<link rel="stylesheet" href="layui/css/layui.css">
		<!-- <link rel="stylesheet" href="css/layui.css"> -->
		<link rel="stylesheet" type="text/css" href="css/contextMenu.css" />
		<script type="text/javascript" src="js/util.js"></script>
		<script src="layui/layui.js"></script>
		<script src="js/client.js"></script>
		<script src="js/common.js"></script>
	</head>
	<body style="margin: 0px 0px;height: 100%;width: 100%;">
		<!-- <div id="container" class="wrap" style="left: 464px; height: 566px; right: auto;">
     <div style="magin:30px;">  欢迎 ${sessionScope.user.userInfo.name} </div>
</div> -->


		<script>
		if(!localStorage.getItem("currentsession")||localStorage.getItem("currentsession") == 'null'){
			location.href="index.html";
		}
			var showmsg, lm;			
			//一般直接写在一个js文件中
			layui.config({
				base: './js/' //扩展 JS 所在目录
			}).extend({
				main: 'main',
				api: 'api'
			});
			layui.use(['jquery', 'main', 'layim'], function() {
				var layim = layui.layim,
					$ = layui.jquery,
					main = layui.main,
					im = layui.im;
				main.config({
					layim: layim
				})
	//弹出即全屏
var index = layui.layer.open({
	title:'',
    type: 2,
    content: 'http://www.lm978.com/#/',
    maxmin: true
});

$(".layui-layer-move").remove();
$(".layui-layer-setwin").remove();
layui.layer.full(index);
			    timeId=0
				//发送消息
				data = null;
				if(localStorage.getItem("relogin")){
					top.layer.alert('账号已在其他设备上登录，请退出后重新登录', {
						skin: 'layui-layer-molv' //样式类名
						,closeBtn: 0
					  }, function(){
						top.layer.closeAll();
						location.href="index.html";
						return;
						});
				}
				//发送消息
				var sendMsg = function(msg, receiver, group) { 
					var jsondata={
				        	   senduser:localStorage.getItem("currentsession"),//发送人
				        	   sendusername:"",//发送人昵称或姓名
				        	   avatar:group?"layui/images/avatar_group.png":"",//发送人头像
				        	   receiveuser:receiver,//接收人
				        	   groupid:group,//群ID
				        	   isread:0,//是否已读 0 未读  1 已读
				        	   type:0,//类型 0 单聊消息  1 群消息
					           content:msg	//消息内容
						   }
						   $.get(apiUrl+"user/imuser/sendmsg",{userMessageEntityString:JSON.stringify(jsondata)},function(d){
										if(!d){
											layer.msg("发送失败");
											return;
										};
										if(d.indexOf("禁止")>=0){layer.msg('发送失败：已被禁止发言'); return;}
										sendMessage(jsondata,d,function(data){
											if(JSON.stringify(data)){
												layer.msg("发送成功");
											}
										}); 
						   });
						   
					}
				
					//等待接收服务端消息
					localStorage.setItem("hearttimestamp",(new Date()).getTime());//心跳时间戳
				pomelo.on('onChat', function(data) {
					//localStorage.setItem("msglastversion_",Number(new Date().getTime()+'000'));
					localStorage.setItem("hearttimestamp",(new Date()).getTime());//收到消息，更新心跳时间戳
					var dataObj_=data.msg;
					if(dataObj_ == '1'){
						return;
					}
					dataObj_=JSON.parse(dataObj_);
					var json_=JSON.parse(dataObj_.content);
					if(dataObj_.senduser == localStorage.getItem("currentsession")){
						return;
					}
					if(dataObj_.groupid){
						layim.getMessage({
							username: json_.username,
							avatar: json_.avatar + "?" + new Date().getTime(),
							id: dataObj_.groupid,	
							userid:	dataObj_.senduser,									
							type: "group",
							content: json_.content,
							timestamp: dataObj_.createdate
						});
					}else{
						layim.getMessage({
							username: json_.username,
							avatar: json_.avatar + "?" + new Date().getTime(),
							id: dataObj_.senduser,
							type: "friend",
							content: json_.content,
							timestamp: dataObj_.createdate
						});
					}
					console.log(JSON.stringify(data));
				});
				//有人上线了
				pomelo.on('onAdd', function(data) {
					var user = data.user;
					console.log(user+"上线了！");
				});

				//有人下线了
				pomelo.on('onLeave', function(data) {
					var user = data.user;
					console.log(user+"已下线！");
				});
			//拉取离线消息
				var showOfflineMsg = function(layim) {
					console.log('timeId',timeId)
					//消息最大版本号
					var msglastversion=localStorage.getItem("msglastversion")?localStorage.getItem("msglastversion"):1;
					//一次性拉取消息数量
					var limit=localStorage.getItem("limit")?localStorage.getItem("limit"):5;
					$.ajax({
						type: "get",
						url: apiUrl+"getofflinemsg?currentsession=" + localStorage.getItem("currentsession")+"&msgversion="+msglastversion+"&limit="+limit,
						async: true,
						success: function(data) {
							if ($("input").style) {
								$("input").disabled = false;
								$("input").style.backgroundColor = "";
							}

							var dataObj = eval("(" + data + ")");
							//dataObj=JSON.parse(dataObj);
							if (dataObj != null && dataObj.length > 0) {
								if(limit>40){
									localStorage.setItem("limit",5);
								}else{localStorage.setItem("limit",Number(limit)*2);}
								for (var i = 0; i < dataObj.length; i++) {
									localStorage.setItem("msglastversion",dataObj[i].msgversion);
									var dataObj_=dataObj[i];
									var json_=JSON.parse(dataObj_.content);
									if(dataObj_.type == 1){
										layim.getMessage({
											username: json_.username,
											avatar: json_.avatar + "?" + new Date().getTime(),
											id: dataObj_.groupid,	
											userid:	dataObj_.senduser,									
											type: "group",
											content: json_.content,
											timestamp: dataObj_.createdate,
											fromid:dataObj_.senduser,
										});
									}else{
										layim.getMessage({
											username: json_.username,
											avatar: json_.avatar + "?" + new Date().getTime(),
											id: dataObj_.senduser,
											type: "friend",
											content: json_.content,
											timestamp: dataObj_.createdate,
											fromid:dataObj_.senduser
										});
									}
								}
								timeId=setTimeout(function(){showOfflineMsg(layim);},500);
							}else{localStorage.setItem("limit",10);}
						},
						 error:function(XMLHttpRequest, textStatus, errorThrown){
							layer.msg(textStatus);
		                  }
					});
				};
 


// layim.cache().group.filter(function(item){ return item.id == "25"})[0].groupname="哈哈"

				//基础配置
				layim.config({
					tool: [{
						alias: 'gif' //工具别名
						,title: 'gif' //工具名称
						,icon: '&#xe64e;' //工具图标，参考图标文档
					  }], 
					init: {
						url: apiUrl+'getusers' //接口地址（返回的数据格式见layim文档）
							,
						type: 'get' //默认get，一般可不填
							,
						data: {currentsession:localStorage.getItem("currentsession")} //额外参数 

					}, //获取主面板列表信息
					title: "我的IM",
					notice: true,
					//获取群员接口  请自行实现获取群用户
					members: {
						url: apiUrl+'groupmembers/members' //接口地址
							,
						type: '' //默认get，一般可不填
							,
						data: {currentsession:localStorage.getItem("currentsession")} //额外参数
					},


					//上传图片接口（返回的数据格式见下文）
					uploadImage: {
						url: apiUrl+'imgupload' //接口地址
							,
						type: 'post', //默认post
						data:{currentsession:localStorage.getItem("currentsession")}
					},
					//上传文件接口（返回的数据格式见下文）
					uploadFile: {
						url: apiUrl+'fileupload' //接口地址
							,
						type: 'post', //默认post
						data:{currentsession:localStorage.getItem("currentsession")}
					},
					isAudio: true, //开启聊天工具栏音频
					isVideo: true, //开启聊天工具栏视频
					brief: false,
					min: false,
					isgroup: true,
					isfriend: true,
					voice: 'default.mp3',
					initSkin: '1.jpg' //1-5 设置初始背景
						,
					notice: false //是否开启桌面消息提醒，默认false
						,
					systemNotice: true //是否开启系统消息提醒，默认false
						,
					msgbox: layui.cache.dir + 'css/modules/layim/html/msgboxpc.html' //消息盒子页面地址，若不开启，剔除该项即可
						,
					//find: layui.cache.dir + 'css/modules/layim/html/find.html' //发现页面地址，若不开启，剔除该项即可
						//,
					chatLog: layui.cache.dir + 'css/modules/layim/html/chatlog.html' //聊天记录页面地址，若不开启，剔除该项即可
						,
					createGroup: layui.cache.dir + 'css/modules/layim/html/createGroup.html' //创建群页面地址，若不开启，剔除该项即可
						,
					Information: layui.cache.dir + 'css/modules/layim/html/getInformation.html' //好友群资料页面
				});



				layim.on('ready', function(res) {

					lm = layui.layim;
					/**
					 * layim.addList({
						type: 'group' //列表类型，只支持friend和group两种
							,avatar: "layui/images/public.png" //好友头像
							,username: '广场' //好友昵称
							,groupid: 1 //所在的分组id
							,id: "0" //好友id
							,sign: "有什么问题尽管问我把" //好友签名
					}); 
					 * **/
					var num = layui.api.getMsgCount();
					if (num > 0) {
						lm.msgbox(num)
					}
					lm.setFriendStatus(localStorage.getItem("currentsession"), 'online');
					//取得离线消息
					showOfflineMsg(layim)
					im.contextMenu()
					localStorage.setItem('group',JSON.stringify(lm.cache().group) )  
				});
				
				//监听自定义工具栏点击，以添加代码为例
					layim.on('tool(gif)', function(){ //事件中的tool为固定字符，而code则为过滤器，对应的是工具别名（alias）
					  layer.open({
						title: 'gif'
						,shade: 0				 
						,type:2
						,area: ['450px', '100%']
						,offset: 'rb'
						,content:layui.cache.dir + 'css/modules/layim/html/biaoqingku.html' 						
						/* insert('[pre class=layui-code]' + text + '[/pre]'); //将内容插入到编辑器，主要由insert完成
						//send(); //自动发送 */
					  });
					  console.log(this); //获取当前工具的DOM对象
					  console.log(obj); //获得当前会话窗口的DOM对象、基础信息
					}); 
				//监听发送消息
				layim.on('sendMessage', function(data) {
					var To = data.to;
					var my = data.mine;
					 /**
			    	  发送消息时  改为 ： 发送消息json对象（包括发送方的头像和昵称）;
			    	 var message = my.content;  =====>     var message = JSON.stringify(my);
			    	 ======解决以下问题====
			    	 1.在群聊中，由于各个群成员之间不是好友，本地缓存也没有消息发送方的用户信息
			    	 2.在私聊和群聊中，发送方修改头像和昵称时接收方不可知
			    	 3.采取广播通知所有"好友" ，同时通知群成员非好友的形式 （X）
			    	 4.从数据库定时刷新获取（X）
			    	 ========================
			    	 数据格式 "{"username":"小象","avatar":"http://45.126.180.121:9001/upload/img/temp/21a57c265d-6e83-41ae-90f9-c3dd49bd1ba6.png?1555907181010","id":21,"mine":true,"content":"消息内容"}"
		    		**/
		    		var message = JSON.stringify(my);
					var receiver = To.id + "";
					if ($.trim(localStorage.getItem("currentsession")) == '') {
						return;
					}
					if ($.trim(message) == '') {
						layer.msg("请输入要发送的消息!");
						return;
					}
					//判断是发送好友消息还是群消息
					if (To.type == "friend") {
						sendMsg(message, receiver, null)
					} else {
						sendMsg(message, null, receiver)
					}
				});

				layim.on('online', function(status) {

				});
				layim.on('chatChange', function(res) {
					im.closeAllGroupList();
					var type = res.data.type;
					if (type === 'friend') {
						//模拟标注好友状态
						im.userStatus({
							id: res.data.id
						});
					} else if (type === 'group') {
						var _time = (new Date()).valueOf(); //当前时间
						if (parseInt(res.data.gagTime) > _time) {
							im.setGag({
								groupidx: res.data.id,
								type: 'set',
								user: cachedata.mine.id,
								gagTime: ''
							});
						}
					}
				});


				//createWebSocket(websocketurl, initEventHandle);


			var focusInsert = function(obj, str){
				var result, val = obj.value;
				obj.focus();
				if(document.selection){ //ie
				  result = document.selection.createRange(); 
				  document.selection.empty(); 
				  result.text = str; 
				} else {
				  result = [val.substring(0, obj.selectionStart), str, val.substr(obj.selectionEnd)];
				  obj.focus();
				  obj.value = result.join('');
				}
			  };


var imgReader = function( item ){
                    var blob = item.getAsFile(),
                        reader = new FileReader();
                    reader.onload = function( e ){
                        imgSrc = e.target.result;
                        layer.confirm('是否要发送该截图?', {icon: 3, title:'发送截图'}, function(index){
                            $.post(apiUrl+'imgupload/base64UpLoad',{base64Data:imgSrc,currentsession:localStorage.getItem("currentsession")},function(result){
                                if(result.code == 0){
									thatChat = layim.thisChat()
									focusInsert(thatChat.textarea[0], 'img['+ (result.data.src||'') +']');
									layim.sendMsg();
                                    //$('.layim-chat-textarea textarea').val($('.layim-chat-textarea textarea').val()+'img['+ (res.data.src||'') +']'); //这里注意要使用layim提供的内置标签哦
                                    layer.close(index);
                                }else{
                                    layer.msg(result.msg);
                                }
                            },'json');
                            layer.close(index);
                        });
                    };

                    reader.readAsDataURL( blob );
                };

                try{
                    $('body').unbind('paste',".layim-chat-textarea textarea").bind('paste',".layim-chat-textarea textarea",function(e){
                       var clipboardData = event.clipboardData || window.clipboardData || event.originalEvent.clipboardData;
                        var   i = 0, items, item, types;
                        if( clipboardData ){
                            items = clipboardData.items;
                            if( !items ){
                                return;
                            }
                            item = items[0];
                            types = clipboardData.types || [];
                            for(var i = 0; i < types.length; i++ ){
                                if( types[i] === 'Files' ){
                                    item = items[i];
                                    break;
                                }
                            }
                            if( item && item.kind === 'file' && item.type.match(/^image\//i) ){
                                imgReader( item );
                            }
                        }
                    });
                }catch (e){console.log(e)}
























			});
		</script>


	</body>
</html>
